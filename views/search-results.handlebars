<div>
    {{> search}}
    <div id="modal" class='modal'>
        <div class="modal__content">
            <div class='modal__status'>
                Loading...
            </div>
            <h2 class="modal__content__food-name">sfdg</h2>
            <hr>
            <h5 class="modal__content__subtitle-name">Ingredients</h5>
            <div class='modal__content__ing-list'>

            </div>

            <table class='modal__content__nutrients-table'>
                <tr class='modal__content__nutrients-table__header'>
                    <th>Nutrient</th>
                    <th>Amount</th>
                </tr>
                <tbody class='modal__content__nutrients-table__body'>

                </tbody>
            </table>

        </div>
    </div>
    <div class='search-results'>
        <h2 class='text-center search-results__header'>
            Search Results
        </h2>
        <div class='text-center'>
            {{#if error}}
                <div>
                    No results
                </div>
            {{else}}
                <div>
                    Total Results: {{totalResults}}
                </div>
                {{#if tooLarge}}
                    <div>
                        Can't show all results, consider refining your search
                    </div>
                {{/if}}
            {{/if}}
            <ul class='food-list text-left'>
                {{#each foods}}
                    <li class='food-list__item-container'>
                        <div class='food-list__item' ndbno={{this.ndbno}}>
                            {{this.name}}
                        </div>
                    </li>
                {{/each}}
            </ul>
        </div>
    </div>

</div>
<script>

    const splitByComma = string => {
        const parsedString = string.substring(0, string.length - 1);
        return parsedString.split(',')
    }

    // Diplay modal
    $('.food-list__item').on('click', function() {

        // Shows modal
        $("#modal").css({"display": "block"});

        // Clears text
        $(".modal__content__food-name").text('')
        $('.modal__content__ing-list').text('');
        $(".modal__status").text('');
        $(".modal__status").text('Loading...');

        const ndbno = ($(this).attr('ndbno'));

        axios.get(`/food/${ndbno}`)
        .then(res => {
            const food = res.data;
            const ingredients = food.capitalizedIngredients;

            if (ingredients) {
                $('.modal__content__ing-list').text(ingredients);
            } else {
                $('.modal__content__ing-list').text('No Ingredients Listed');
            }

            $(".modal__status").text('');
            $(".modal__content__food-name").text(food.desc.name);

            food.nutrients.forEach(nutrient => {
                if (nutrient.value !== "0.000" && nutrient.value !== "0.00" && nutrient.value !== "0.0" && nutrient.value !== "0") {
                    const tr = $('<tr>');
                    tr.append(`<td>${nutrient.name}</td>`)
                    tr.append(`<td>${nutrient.value} ${nutrient.unit}</td>`)
                    $('.modal__content__nutrients-table__body').append(tr);
                }
            })

        })
    })

    // Hide modal

    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
            $(".modal__content__food-name").text('')
            $('.modal__content__ing-list').text('');
            $(".modal__status").text('');
            $('.modal__content__nutrients-table__body').empty();
        }
    }

</script>